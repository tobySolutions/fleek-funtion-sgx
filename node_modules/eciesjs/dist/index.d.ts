/// <reference types="node" />
export declare function encrypt(receiverRawPK: string | Uint8Array, msg: Uint8Array): Buffer;
export declare function decrypt(receiverRawSK: string | Uint8Array, msg: Uint8Array): Buffer;
export { ECIES_CONFIG } from "./config";
export { PrivateKey, PublicKey } from "./keys";
export declare const utils: {
    aesEncrypt: (key: Uint8Array, plainText: Uint8Array) => Uint8Array;
    aesDecrypt: (key: Uint8Array, cipherText: Uint8Array) => Uint8Array;
    symEncrypt: (key: Uint8Array, plainText: Uint8Array) => Uint8Array;
    symDecrypt: (key: Uint8Array, cipherText: Uint8Array) => Uint8Array;
    decodeHex: (hex: string) => Uint8Array;
    getValidSecret: () => Uint8Array;
    remove0x: (hex: string) => string;
};
