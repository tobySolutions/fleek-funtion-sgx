"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSiteOrPrivateGateway = void 0;
const selectPrompt_1 = require("../../../prompts/selectPrompt");
const translation_1 = require("../../../utils/translation");
const getPrivateGatewayOrPrompt_1 = require("../../gateways/prompts/getPrivateGatewayOrPrompt");
const getSiteOrPrompt_1 = require("../../sites/prompts/getSiteOrPrompt");
const getSiteOrPrivateGateway = async ({ sdk, privateGatewayId, privateGatewaySlug, siteId, siteSlug, }) => {
    const { upperFirst } = await Promise.resolve().then(() => __importStar(require('lodash-es')));
    const zoneType = !privateGatewayId && !privateGatewaySlug && !siteId && !siteSlug
        ? await (0, selectPrompt_1.selectPrompt)({
            message: `${(0, translation_1.t)('selectDomainPurpose')}:`,
            choices: [
                { title: upperFirst((0, translation_1.t)('site')), value: 'SITE' },
                { title: (0, translation_1.t)('privateGateway'), value: 'PRIVATE_GATEWAY' },
            ],
        })
        : null;
    if (privateGatewayId ||
        privateGatewaySlug ||
        zoneType === 'PRIVATE_GATEWAY') {
        const privateGateway = await (0, getPrivateGatewayOrPrompt_1.getPrivateGatewayOrPrompt)({
            id: privateGatewayId,
            slug: privateGatewaySlug,
            sdk,
        });
        return { privateGateway };
    }
    const site = await (0, getSiteOrPrompt_1.getSiteOrPrompt)({ id: siteId, slug: siteSlug, sdk });
    return { site };
};
exports.getSiteOrPrivateGateway = getSiteOrPrivateGateway;
//# sourceMappingURL=getSiteOrPrivateGateway.js.map