name: ðŸ”§ Build (dry-run)

on:
  workflow_dispatch:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      IPFS_GATEWAY_HOSTNAME: "gateway-ipfs.fleek.xyz"
      SDK__AUTH_APPS_URL: "https://auth-apps.service.fleek.xyz"
      SDK__GRAPHQL_API_URL: "https://graphql.service.fleek.xyz/graphql"
      SDK__IPFS__STORAGE_API_URL: "https://storage-ipfs.service.fleek.xyz"
      SDK__UPLOAD_PROXY_API_URL: "https://uploads.service.fleek.xyz"
      SITE_SLUG_DOMAIN: "on-fleek.app"
      UI__APP_URL: "https://app.fleek.xyz"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 7
          run_install: false

      - name: Update .npmrc with token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ env.NODE_AUTH_TOKEN }}" > .npmrc

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install
        run: pnpm i
        
      - name: Build CLI
        run: pnpm build

      - name: Binary
        run: |
          if ! ./bin/index.js > /dev/null 2>&1; then
            echo "ðŸ‘¹ Oops! The binary seem faulty..."
            exit 1
          fi

          echo "ðŸš‘ Seems healthy!"
